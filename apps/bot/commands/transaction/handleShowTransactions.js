import axios from 'axios';
import { bot } from '../../bot.js';
import handleError from '../../utils/handleError.js';
import logger from '../../utils/logger.js';
import { default_categories } from '../constants/default_categories.js';
import { findCategoryById } from './handleAddTransaction.js';
import { SERVER_URL } from '../../config.js';
import { sessionManager } from '../../utils/sessionManager.js';

export async function handleShowTransactions(chatId) {
  // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–µ—Å—Å–∏–π
  const token = sessionManager.getToken(chatId);
  
  if (!token) {
    bot.sendMessage(chatId, '–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /start –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.');
    return;
  }

  // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  sessionManager.clearSession(chatId, bot);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏
  sessionManager.setState(chatId, 'selecting_period');

  bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üìÖ –ó–∞ –ø—Ä–æ—à–ª—É—é –Ω–µ–¥–µ–ª—é', callback_data: 'transactions_week' },
          { text: 'üìÖ –ó–∞ –º–µ—Å—è—Ü', callback_data: 'transactions_month' },
        ],
      ],
    },
  });

  // –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
  const periodSelectionHandler = async (callbackQuery) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω—É–∂–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (callbackQuery.message.chat.id !== chatId) {
      return;
    }
    
    const period = callbackQuery.data;
    
    logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø–µ—Ä–∏–æ–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`, { 
      chatId, 
      period
    });

    try {
      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–µ—Å—Å–∏–π
      const currentToken = sessionManager.getToken(chatId);
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      const transactionsResponse = await axios.get(
        `${SERVER_URL}/api/transactions?period=${period}`,
        {
          headers: { Authorization: `Bearer ${currentToken}` },
        }
      );
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      let customCategories = [];
      try {
        const categoriesResponse = await axios.get(
          `${SERVER_URL}/api/categories/custom`,
          {
            headers: { Authorization: `Bearer ${currentToken}` },
          }
        );
        
        if (categoriesResponse.status === 200) {
          customCategories = categoriesResponse.data;
        }
      } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', {
          error: error.message,
          chatId
        });
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      }

      if (transactionsResponse.status === 200) {
        const formatter = new Intl.DateTimeFormat('ru-RU', {
          timeZone: 'Europe/Moscow',
          day: 'numeric',
          month: 'long',
          year: 'numeric',
          hour: '2-digit',
          minute: '2-digit',
          hour12: false,
        });

        const transactions = transactionsResponse.data;
        if (transactions.length === 0) {
          bot.sendMessage(chatId, '–ó–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–µ—Ç.');
        } else {
          const transactionList = transactions
            .map((t) => {
              // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–¥–æ—Ö–æ–¥/—Ä–∞—Å—Ö–æ–¥) –ø–æ —Å—É–º–º–µ
              const isIncome = t.amount > 0;

              // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
              let categoryText = '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
              
              if (isIncome) {
                categoryText = '–î–æ—Ö–æ–¥';
              } else if (t.category_id) {
                // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
                const customCategory = customCategories.find(cat => cat.id === t.category_id);
                if (customCategory) {
                  categoryText = `üîπ ${customCategory.name}`;
                } else {
                  // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö, –∏—â–µ–º –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
                  const category = findCategoryById(default_categories, t.category_id);
                  if (category) {
                    categoryText = category.name;
                  }
                }
              }

              // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ—Ö–æ–¥–∞ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥–∞
              return isIncome
                ? `üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: ${t.amount.toLocaleString('ru-RU', {
                    style: 'currency',
                    currency: 'RUB',
                  })}
–î–∞—Ç–∞: ${formatter.format(new Date(t.date))}
–û–ø–∏—Å–∞–Ω–∏–µ: ${t.description || '–Ω–µ—Ç'}`
                : `üí∏ –†–∞—Å—Ö–æ–¥: ${t.amount.toLocaleString('ru-RU', {
                    style: 'currency',
                    currency: 'RUB',
                  })}
–î–∞—Ç–∞: ${formatter.format(new Date(t.date))}
–û–ø–∏—Å–∞–Ω–∏–µ: ${t.description || '–Ω–µ—Ç'}, 
–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryText}`;
            })
            .join('\n\n');
          bot.sendMessage(chatId, `–í–∞—à–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:\n\n${transactionList}`);
        }
      } else {
        bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.');
      }
      
      // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      sessionManager.clearSession(chatId, bot);
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', {
        error: error.message,
        stack: error.stack,
        chatId,
        period,
      });
      handleError(chatId, error, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.');
      
      // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      sessionManager.clearSession(chatId, bot);
    }
  };
  
  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
  sessionManager.setCallbackHandler(chatId, periodSelectionHandler, bot);
}
