import Transport from 'winston-transport';
import axios from 'axios';

/**
 * –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ –≤ Telegram
 */
export class TelegramTransport extends Transport {
  constructor(opts) {
    super(opts);
    
    this.name = 'TelegramTransport';
    this.level = opts.level || 'error';
    this.botToken = opts.botToken;
    this.chatId = opts.chatId;
    
    if (!this.botToken || !this.chatId) {
      console.warn('TelegramTransport: botToken –∏–ª–∏ chatId –Ω–µ —É–∫–∞–∑–∞–Ω—ã. –õ–æ–≥–∏ –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ Telegram.');
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥ –≤ Telegram
   */
  async log(info, callback) {
    if (!this.botToken || !this.chatId) {
      return callback();
    }

    try {
      const { level, message, ...meta } = info;
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
      let telegramMessage = `üîî *${level.toUpperCase()}*: ${message}\n`;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
      if (Object.keys(meta).length > 0) {
        // –ò—Å–∫–ª—é—á–∞–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ Telegram
        const { timestamp, service, ...relevantMeta } = meta;
        
        if (Object.keys(relevantMeta).length > 0) {
          telegramMessage += '\n*–î–µ—Ç–∞–ª–∏:*\n';
          
          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–µ –ø–æ–ª–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
          for (const [key, value] of Object.entries(relevantMeta)) {
            // –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ - –æ–±—ä–µ–∫—Ç, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ —Å—Ç—Ä–æ–∫—É
            const valueStr = typeof value === 'object' 
              ? JSON.stringify(value, null, 2)
              : value;
              
            telegramMessage += `- *${key}*: ${valueStr}\n`;
          }
        }
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
      telegramMessage += `\nüìÖ ${new Date().toISOString()}`;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
      await axios.post(
        `https://api.telegram.org/bot${this.botToken}/sendMessage`,
        {
          chat_id: this.chatId,
          text: telegramMessage,
          parse_mode: 'Markdown',
        }
      );
      
      callback();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞ –≤ Telegram:', error);
      callback();
    }
  }
}

export default TelegramTransport;
